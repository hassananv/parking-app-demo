version: "3.6"
services:
  web:
    image: "${COMPOSE_PROJECT_NAME}-web"
    environment:
      - API_URL=${API_URL}
      - WEB_BASE_HREF=${WEB_BASE_HREF}
      - PUBLIC_URL=${PUBLIC_URL}
      - IpFilterRules=${IpFilterRules}
      - RealIpFrom=${RealIpFrom}
    ports:
      - "${WEB_HTTP_PORT}:8080"
    depends_on:
      - api
  #
  # api
  #-------------------------------------------------
  # The API performs the migrations on the database.
  # Therefore, it needs to come up after the database
  # has had time to fully initialize.
  #
  # We are using a simple sleep command to do this
  # for the moment; refer to the `command` section
  # of the configuration for details.  It would be
  # nice to implement a more deterministic solution.
  #
  api:
    image: "${COMPOSE_PROJECT_NAME}-api"
    environment:
      - DATABASE_SERVICE_NAME=${DATABASE_SERVICE_NAME}      
      - DATABASE_ENGINE=${DATABASE_ENGINE}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DB_SERVICE_HOST=${DATABASE_SERVICE_NAME}
      - DB_SERVICE_PORT=5432
      
      - DEFAULT_BASE_URL=${DEFAULT_BASE_URL}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - DATA_SECURITY_KEY=${DATA_SECURITY_KEY}
      - URL_SCHEME=${URL_SCHEME}   
      
      
    volumes:
      - ../api/api:/opt/app-root/src/api
    ports:
      - "${API_HTTP_PORT}:8080"
    depends_on:
      - db
    command: >
      /bin/bash -c "
        echo Waiting for the database service to start up ...;
        sleep 10;
        alembic upgrade head;
        /usr/libexec/s2i/run;"

  #
  # db
  #
  db:
    image: centos/postgresql-12-centos7
    environment:
      - POSTGRESQL_USER=${POSTGRESQL_USER}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_ADMIN_PASSWORD=${POSTGRESQL_ADMIN_PASSWORD}
    ports:
      - 5432:5432

